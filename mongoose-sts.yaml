apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: mongoose
  namespace:
  labels:
    type: statefulset
spec:
  serviceName: mongoose
  replicas: 3
  selector:
    matchLabels:
      app: mongoose
  template:
    metadata:
      labels:
        app: mongoose
    spec:
      initContainers:
      - name: init-mongoose
        image: busybox
        command:
        - "sh"
        - "-c"
        - |
          sed -e "s/-name.*$/-name mongooseim@${POD_NAME}.mongoose.${POD_NAMESPACE}.svc.cluster.local/" /mnt/config-map/vm.args > /mnt/config/vm.args
        volumeMounts:
        - name: config-map
          mountPath: /mnt/config-map
        - name: config
          mountPath: /mnt/config
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace

      subdomain: mongoose
      containers:
      - name: mongoose
        image: rslota/mongooseim-kube:latest
        ports:
        - name: epmd
          containerPort: 4369
        - name: c2s
          containerPort: 5222
        - name: s2s
          containerPort: 5269
        - name: bosh
          containerPort: 5280
        - name: erlang-dist
          containerPort: 9100
        volumeMounts:
        - name: config
          mountPath: /member
        # - name: mnesia
        #   mountPath: /var/lib/mongooseim
      volumes:
        - name: config-map
          configMap:
            name: mongooseim
        - name: config
          emptyDir: {}
  # volumeClaimTemplates:
  # - metadata:
  #     name: mnesia
  #     annotations:
  #       volume.beta.kubernetes.io/storage-class: "dynamic-nfs"
  #   spec:
  #     accessModes:
  #       - ReadWriteMany
  #     resources:
  #       requests:
  #         storage: 10Mi
  #     storageClassName: dynamic-nfs

